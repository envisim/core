import {describe} from 'vitest';

import {FoldedNormal, LogNormal, Normal} from '../../src/index.js';
import {distributionTests, fromTo} from '../_distributions.testf.js';

describe('Normal(6, 2)', () => {
  const pdf = [
    7.4335975736714883895e-7, 6.691511288244268382e-5, 2.2159242059690037636e-3,
    2.6995483256594031418e-2, 1.2098536225957168266e-1, 1.9947114020071635143e-1,
    1.2098536225957168266e-1, 2.6995483256594031418e-2, 2.2159242059690037636e-3,
    6.691511288244268382e-5, 7.4335975736714883895e-7,
  ];
  const cdf = [
    2.8665157187919391185e-7, 3.1671241833119924327e-5, 1.3498980316300945772e-3,
    2.2750131948179212055e-2, 1.5865525393145704647e-1, 5.0e-1, 8.4134474606854292578e-1,
    9.7724986805182079141e-1, 9.9865010196836989653e-1, 9.9996832875816688002e-1,
    9.9999971334842807646e-1,
  ];
  const quantile = [
    -Infinity,
    3.4368968689107983749,
    4.3167575328541714086,
    4.9511989745839191102,
    5.4933057937284006655,
    6.0,
    6.5066942062715993345,
    7.0488010254160808898,
    7.6832424671458285914,
    8.5631031310892016251,
    Infinity,
  ];
  const x = fromTo(-4, 16, 2);

  distributionTests(new Normal(6, 2), {x, pdf, cdf, quantile});
});

describe('LogNormal(1, 0.25)', () => {
  const pdf = [
    0.00053532090305954147056, 0.03366592263843559695857, 0.22768560978408791672933,
    0.50707120598564869862201, 0.60411574458368122453322, 0.49211072915005021899404,
    0.31442077131425616443039, 0.17110960609268938137362, 0.08356612448304631679541,
    0.03790840774895623543905, 0.01635210510356487068062,
  ];
  const cdf = [
    3.1671241833119924327e-5, 3.9758825994728706765e-3, 4.9588842066439202394e-2,
    1.9872880177413512759e-1, 4.2937946451219038968e-1, 6.5337527043793608428e-1,
    8.1463364443218888589e-1, 9.0987802114450233582e-1, 9.5910016624394278661e-1,
    9.8232059695072759808e-1, 9.9261053822080369535e-1,
  ];
  const quantile = [
    0.0,
    1.973112230536156364,
    2.2025035521476734601,
    2.3842863895263954888,
    2.5514535699966036653,
    2.7182818284590450908,
    2.8960182485078447279,
    3.0990639930626713294,
    3.3548441235091499557,
    3.7448736998213285609,
    Infinity,
  ];
  const x = fromTo(1.0, 5.2, 0.4);

  distributionTests(new LogNormal(1, 0.25), {x, pdf, cdf, quantile});
});

describe('FoldedNormal(1, 1)', () => {
  const pdf = [
    0.483941449038286730655, 0.4829520685275445202045, 0.4699928522763501259618,
    0.4265172868216872692493, 0.3468075721254852972208, 0.2464025729310813650486,
    0.1509596848042178141025, 0.0792421052266855802104, 0.0355335359139879597423,
    0.0135931100857510991919, 0.0044333351314527411069,
  ];
  const cdf = [
    0.0, 0.19349645851630253857, 0.3848099714479712441, 0.56535626192560450853,
    0.72108569422620771849, 0.83999484803691282231, 0.91890641150055218933, 0.96399733284314914616,
    0.986083206737485507, 0.99533669952157877159, 0.998649815316797973,
  ];
  const quantile = [
    0.0,
    0.20663537522553557246,
    0.41344157524114072411,
    0.62135648300606971528,
    0.83238125561748987913,
    1.0505328263351245699,
    1.2825264156117028858,
    1.5403641864195101174,
    1.8494719949403299886,
    2.284464114150681624,
    Infinity,
  ];
  const x = fromTo(0, 10, 1).map((e) => e * 0.4);

  distributionTests(new FoldedNormal(1, 1), {x, pdf, cdf, quantile});
});
